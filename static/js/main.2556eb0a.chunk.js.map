{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["Titles","className","Form","props","onSubmit","getWeather","type","name","autocomplete","required","Weather","city","country","icon","alt","src","description","temperature","toFixed","temp_min","temp_max","wind","xmlns","x","y","width","height","viewBox","fill","fill-rule","stroke","stroke-width","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-dasharray","stroke-dashoffset","font-family","font-weight","font-size","text-anchor","d","humidity","error","API_KEY","App","state","undefined","capitalizeFirstLetter","string","charAt","toUpperCase","slice","e","a","async","preventDefault","target","elements","value","fetch","api_call","json","data","cod","console","log","setState","main","temp","speed","sys","weather","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2556eb0a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Titles = () => (\r\n  <div>\r\n    <h1>Weather Finder</h1>\r\n    <p className=\"title_p\">Find out temperature, conditions and more...</p>\r\n  </div>\r\n);\r\n\r\nexport default Titles;\r\n","import React from \"react\";\r\n\r\nconst Form = props => (\r\n  <div className=\"inputcontainer\">\r\n    <form onSubmit={props.getWeather}>\r\n      <div className=\"group\">\r\n        <input type=\"text\" name=\"city\" autocomplete=\"off\" required />\r\n        <span className=\"highlight\"></span>\r\n        <span className=\"bar\"></span>\r\n        <label>City</label>\r\n      </div>\r\n      <button>Get Weather</button>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Weather = props => (\r\n  <div className=\"weather_main\">\r\n    {props.city && props.country && (\r\n      <p className=\"location\">\r\n        {props.city}, {props.country}\r\n      </p>\r\n    )}\r\n    {props.icon && (\r\n      <div className=\"icon\">\r\n        <img\r\n          className=\"icon_picture\"\r\n          alt=\"icon\"\r\n          src={`http://openweathermap.org/img/wn/${props.icon}@2x.png`}\r\n        />\r\n      </div>\r\n    )}\r\n    {props.description && <p className=\"desc\">{props.description}</p>}\r\n    {props.temperature && (\r\n      <p className=\"temp\">{props.temperature.toFixed(0)} °C</p>\r\n    )}\r\n    {props.temp_min && (\r\n      <div>\r\n        <p className=\"temp_min_label\">Min</p>\r\n        <p className=\"temp_min\">{props.temp_min.toFixed(0)} °C</p>\r\n      </div>\r\n    )}\r\n    {props.temp_max && (\r\n      <div>\r\n        <p className=\"temp_max_label\">Max</p>\r\n        <p className=\"temp_max\">{props.temp_max.toFixed(0)} °C</p>\r\n      </div>\r\n    )}\r\n    {props.wind && (\r\n      <div className=\"wind_div\">\r\n        <p className=\"wind\">{props.wind.toFixed(0)}</p>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          width=\"64\"\r\n          height=\"64\"\r\n          viewBox=\"0 0 172 172\"\r\n        >\r\n          <g\r\n            fill=\"none\"\r\n            fill-rule=\"nonzero\"\r\n            stroke=\"none\"\r\n            stroke-width=\"1\"\r\n            stroke-linecap=\"butt\"\r\n            stroke-linejoin=\"miter\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-dasharray=\"\"\r\n            stroke-dashoffset=\"0\"\r\n            font-family=\"none\"\r\n            font-weight=\"none\"\r\n            font-size=\"none\"\r\n            text-anchor=\"none\"\r\n          >\r\n            <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\r\n            <g fill=\"#ffffff\">\r\n              <path d=\"M80.625,16.125c-6.85313,0 -13.43855,2.4177 -18.5448,6.98645c-1.6125,1.47813 -1.87968,4.03282 -0.40155,5.64532c1.47812,1.6125 4.0302,1.87968 5.6427,0.40155c3.62812,-3.225 8.33178,-4.97083 13.30365,-4.97083c11.15313,0 20.15625,9.00312 20.15625,20.15625c0,11.15312 -9.00312,20.15625 -20.15625,20.15625h-32.25c-2.28438,0 -4.03125,1.74688 -4.03125,4.03125c0,2.28437 1.74687,4.03125 4.03125,4.03125h32.25c15.5875,0 28.21875,-12.63125 28.21875,-28.21875c0,-15.5875 -12.63125,-28.21875 -28.21875,-28.21875zM142.4375,32.25c-2.28438,0 -4.03125,1.74688 -4.03125,4.03125c0,2.28437 1.74687,4.03125 4.03125,4.03125c11.15312,0 20.15625,9.00313 20.15625,20.15625c0,11.15313 -9.00313,20.15625 -20.15625,20.15625h-123.625c-2.28438,0 -4.03125,1.74688 -4.03125,4.03125c0,2.28437 1.74687,4.03125 4.03125,4.03125h123.625c15.5875,0 28.21875,-12.63125 28.21875,-28.21875c0,-15.5875 -12.63125,-28.21875 -28.21875,-28.21875zM32.25,64.5c-2.2264,0 -4.03125,1.80485 -4.03125,4.03125c0,2.2264 1.80485,4.03125 4.03125,4.03125c2.2264,0 4.03125,-1.80485 4.03125,-4.03125c0,-2.2264 -1.80485,-4.03125 -4.03125,-4.03125zM5.375,96.75c-2.28438,0 -4.03125,1.74688 -4.03125,4.03125c0,2.28437 1.74687,4.03125 4.03125,4.03125h34.9375c2.28437,0 4.03125,-1.74688 4.03125,-4.03125c0,-2.28437 -1.74688,-4.03125 -4.03125,-4.03125zM72.5625,96.75c-2.28437,0 -4.03125,1.74688 -4.03125,4.03125c0,2.28437 1.74688,4.03125 4.03125,4.03125h34.9375c11.15313,0 20.15625,9.00312 20.15625,20.15625c0,11.15312 -9.00312,20.15625 -20.15625,20.15625c-4.70312,0 -9.27135,-1.61302 -12.89947,-4.56927c-1.74688,-1.47813 -4.30157,-1.20885 -5.64532,0.53802c-1.34375,1.74687 -1.20885,4.29895 0.53802,5.6427c5.10625,4.16563 11.4224,6.45105 18.00678,6.45105c15.5875,0 28.21875,-12.63125 28.21875,-28.21875c0,-15.5875 -12.63125,-28.21875 -28.21875,-28.21875z\"></path>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    )}\r\n\r\n    {props.humidity && (\r\n      <div className=\"humidity_div\">\r\n        <p className=\"humidity\">{props.humidity}</p>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          width=\"64\"\r\n          height=\"64\"\r\n          viewBox=\"0 0 172 172\"\r\n        >\r\n          <g\r\n            fill=\"none\"\r\n            fill-rule=\"nonzero\"\r\n            stroke=\"none\"\r\n            stroke-width=\"1\"\r\n            stroke-linecap=\"butt\"\r\n            stroke-linejoin=\"miter\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-dasharray=\"\"\r\n            stroke-dashoffset=\"0\"\r\n            font-family=\"none\"\r\n            font-weight=\"none\"\r\n            font-size=\"none\"\r\n            text-anchor=\"none\"\r\n          >\r\n            <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\r\n            <g fill=\"#ffffff\">\r\n              <path d=\"M86,18.47656l-4.19922,5.03906c0,0 -10.75,12.95459 -21.66797,29.05859c-5.45898,8.0625 -11.08594,16.85986 -15.28516,25.36328c-4.19922,8.50342 -7.22266,16.6499 -7.22266,24.1875c0,26.58106 21.79395,48.375 48.375,48.375c26.58106,0 48.375,-21.79394 48.375,-48.375c0,-7.5376 -3.02344,-15.68408 -7.22266,-24.1875c-4.19922,-8.50342 -9.82617,-17.30078 -15.28516,-25.36328c-10.91797,-16.10401 -21.66797,-29.05859 -21.66797,-29.05859zM86,35.77734c3.00244,3.71631 8.6294,10.30908 17.13281,22.84375c5.29102,7.78955 10.41406,16.37695 14.27734,24.1875c3.86328,7.81055 6.21484,15.0332 6.21484,19.31641c0,20.72315 -16.90185,37.625 -37.625,37.625c-20.72315,0 -37.625,-16.90185 -37.625,-37.625c0,-4.2832 2.35156,-11.50586 6.21484,-19.31641c3.86328,-7.81055 8.98633,-16.39795 14.27734,-24.1875c8.50342,-12.53467 14.13037,-19.12744 17.13281,-22.84375zM59.125,102.125c0,14.76026 12.11474,26.875 26.875,26.875v-10.75c-8.90234,0 -16.125,-7.22266 -16.125,-16.125z\"></path>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    )}\r\n    {props.error && <p className=\"error\">{props.error}</p>}\r\n  </div>\r\n);\r\n\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport \"./App.css\";\n\nconst API_KEY = \"6449bc47480892a73c673c47e860d735\";\n\nexport class App extends Component {\n  state = {\n    temperature: undefined,\n    temp_min: undefined,\n    temp_max: undefined,\n    wind: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: undefined,\n    error: undefined\n  };\n\n  capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  getWeather = async e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n\n    if (data.cod === \"404\") {\n      console.log(data);\n      this.setState({\n        temperature: undefined,\n        temp_min: undefined,\n        temp_max: undefined,\n        wind: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        icon: undefined,\n        error: \"Please enter a valid city name.\"\n      });\n    } else if (city) {\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        temp_min: data.main.temp_min,\n        temp_max: data.main.temp_max,\n        wind: data.wind.speed,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: this.capitalizeFirstLetter(data.weather[0].description),\n        icon: data.weather[0].icon,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        temp_min: undefined,\n        temp_max: undefined,\n        wind: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        icon: undefined,\n        error: \"Please enter a value.\"\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"titles\">\n          <Titles />\n        </div>\n        <div className=\"form\">\n          <Form getWeather={this.getWeather} />\n        </div>\n        <div className=\"weather\">\n          <Weather\n            temperature={this.state.temperature}\n            temp_min={this.state.temp_min}\n            temp_max={this.state.temp_max}\n            wind={this.state.wind}\n            city={this.state.city}\n            country={this.state.country}\n            humidity={this.state.humidity}\n            description={this.state.description}\n            icon={this.state.icon}\n            error={this.state.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}